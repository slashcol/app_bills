{"version":3,"sources":["webpack:///src/app/pages/sub-category-list/sub-category-list.module.ts","webpack:///src/app/pages/sub-category-list/sub-category-list.html","webpack:///src/app/pages/sub-category-list/sub-category-list.ts","webpack:///src/app/services/app-config.ts"],"names":["SubCategoryListPageModule","forChild","path","component","declarations","imports","SubCategoryListPage","injector","appConfigService","subCategoryService","subcategories","params","skeletonArray","Array","onContentLoaded","category","id","getQueryParams","categoryId","setupObservable","contentLoaded","loadAndScroll","container","ionScroll","setTimeout","next","length","showLoadingView","showOverlay","loadData","getTrans","title","setPageTitle","setMetaTags","event","refresher","target","load","appConfig","layout","subcategoryList","showContentView","showEmptyView","onRefreshComplete","translate","get","subscribe","str","showToast","showErrorView","index","item","opacity","transform","optional","selector","templateUrl","styleUrls","animations","AppConfigService","run","providedIn","registerSubclass"],"mappings":"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","file":"pages-sub-category-list-sub-category-list-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SubCategoryListPage } from './sub-category-list';\nimport { SharedModule } from '../../shared.module';\n\n@NgModule({\n  declarations: [\n    SubCategoryListPage,\n  ],\n  imports: [\n    RouterModule.forChild([\n      {\n        path: '',\n        component: SubCategoryListPage\n      }\n    ]),\n    SharedModule\n  ],\n})\nexport class SubCategoryListPageModule { }\n","<ion-header class=\"ion-no-border\">\n  <ion-toolbar fixed>\n    <ion-buttons slot=\"start\">\n      <ion-back-button></ion-back-button>\n    </ion-buttons>\n    <ion-buttons slot=\"end\">\n      <ion-button *ngIf=\"isContentViewVisible && layout?.enabled\" strong color=\"dark\" size=\"small\" [routerLink]=\"['../items']\" [queryParams]=\"{ cat: params?.category?.id }\">\n        {{ 'VIEW_ALL' | translate }}\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content scrollEvents=\"true\" #container>\n\n  <ion-refresher slot=\"fixed\" (ionRefresh)=\"loadData($event)\">\n    <ion-refresher-content pullingText=\"{{ 'PULL_TO_REFRESH' | translate }}\"\n      refreshingText=\"{{ 'REFRESHING' | translate }}\">\n    </ion-refresher-content>\n  </ion-refresher>\n\n  <ion-grid fixed>\n\n    <div class=\"ion-text-center\" *ngIf=\"isLoadingViewVisible\">\n      <ion-spinner></ion-spinner>\n    </div>\n\n    <empty-view *ngIf=\"isErrorViewVisible\" icon=\"alert-circle-outline\" [text]=\"'ERROR_DATA' | translate\">\n    </empty-view>\n\n    <empty-view *ngIf=\"isEmptyViewVisible\" icon=\"alert-circle-outline\" [text]=\"'EMPTY_DATA' | translate\">\n    </empty-view>\n\n    <ion-row *ngIf=\"isContentViewVisible && !layout?.enabled\" class=\"ion-margin-vertical\" [@staggerIn]=\"subcategories.length\">\n      <ion-col size-xs=\"3\" class=\"ion-text-center\">\n        <div class=\"circle dark-bg\"\n          [routerLink]=\"['../items']\"\n          [queryParams]=\"{ cat: params?.category?.id }\">\n          <div class=\"circle-inner\">\n            <p class=\"bold link\">{{ 'VIEW_ALL' | translate }}</p>\n          </div>\n        </div>\n      </ion-col>\n      <ion-col size-xs=\"3\" class=\"ion-text-center\"\n        [routerLink]=\"['../items']\"\n        [queryParams]=\"{ subcat: category.id }\"\n        *ngFor=\"let category of subcategories;trackBy:trackByFn\">\n        <div class=\"circle bg-img\"\n          defaultImage=\"./assets/imgs/placeholder.png\"\n          [lazyLoad]=\"category.imageThumb?.url()\"\n          [customObservable]=\"loadAndScroll\"></div>\n        <ion-text color=\"dark\">\n          <p class=\"link margin-6 text-medium\">\n            {{ category.name }}\n          </p>\n        </ion-text>\n      </ion-col>\n    </ion-row>\n\n    <ion-row *ngIf=\"isContentViewVisible && layout?.enabled\" class=\"ion-margin-vertical ion-padding\" [@staggerIn]=\"subcategories.length\">\n        <ion-col [attr.size-xs]=\"12 / layout?.item?.columnsXs\" [attr.size-md]=\"12 / layout?.item?.columnsMd\" [attr.size-lg]=\"12 / layout?.item?.columnsLg\"\n          *ngFor=\"let category of subcategories;trackBy:trackByFn\">\n          <div class=\"ion-activatable full-width\" [routerLink]=\"['../items']\" [queryParams]=\"{ subcat: category.id }\">\n            <div class=\"card\" [style.box-shadow]=\"layout?.item?.boxShadow\" [style.margin]=\"layout?.item?.margin\" [style.height]=\"layout?.item?.height\" [style.border-radius]=\"layout?.item?.radius\">\n              <div class=\"bg-img\" defaultImage=\"./assets/imgs/placeholder.png\" [lazyLoad]=\"category.image?.url()\"\n                [customObservable]=\"loadAndScroll\">\n              </div>\n              <div class=\"content\">\n                <ion-text color=\"light\" *ngIf=\"!layout?.item?.hideTitle\">\n                  <h5 class=\"bold link\" [style.font-size]=\"layout?.item?.fontSize\">\n                    {{ category.name }}\n                  </h5>\n                </ion-text>\n              </div>\n            </div>\n            <ion-ripple-effect type=\"bounded\"></ion-ripple-effect>\n          </div>\n        </ion-col>\n    </ion-row>\n\n  </ion-grid>\n\n</ion-content>","import { Component, Injector, ViewChild, HostListener } from '@angular/core';\nimport { BasePage } from '../base-page/base-page';\nimport { SubCategory } from '../../services/sub-category';\nimport { Category } from 'src/app/services/category';\nimport { Subject, Observable, merge } from 'rxjs';\nimport {\n  trigger,\n  style,\n  animate,\n  transition,\n  query,\n  stagger\n} from '@angular/animations';\nimport { IonContent } from '@ionic/angular';\nimport { AppConfigService } from 'src/app/services/app-config';\n\n@Component({\n  selector: 'page-sub-category-list',\n  templateUrl: 'sub-category-list.html',\n  styleUrls: ['sub-category-list.scss'],\n  animations: [\n    trigger('staggerIn', [\n      transition('* => *', [\n        query(':enter', style({ opacity: 0, transform: `translate3d(0,10px,0)` }), { optional: true }),\n        query(':enter', stagger('100ms', [animate('300ms', style({ opacity: 1, transform: `translate3d(0,0,0)` }))]), { optional: true })\n      ])\n    ])\n  ]\n})\nexport class SubCategoryListPage extends BasePage {\n\n  @ViewChild(IonContent, { static: true }) container: IonContent;\n\n  @HostListener('window:focus')\n  onFocus(): void {\n    this.onContentLoaded();\n  }\n\n  public subcategories: SubCategory[] = [];\n  public params: any = {};\n  public skeletonArray = Array(32);\n\n  protected contentLoaded: Subject<any>;\n  protected loadAndScroll: Observable<any>;\n\n  public layout: any;\n\n  constructor(injector: Injector,\n    private appConfigService: AppConfigService,\n    public subCategoryService: SubCategory) {\n    super(injector);\n  }\n\n  ngOnInit() {\n    const category = new Category;\n    category.id = this.getQueryParams().categoryId;\n    this.params.category = category;\n\n    this.setupObservable();\n  }\n\n  enableMenuSwipe(): boolean {\n    return false;\n  }\n\n  setupObservable() {\n    this.contentLoaded = new Subject();\n    this.loadAndScroll = merge(\n      this.container.ionScroll,\n      this.contentLoaded\n    );\n  }\n\n  onContentLoaded() {\n    setTimeout(() => {\n      this.contentLoaded.next();\n    }, 400);\n  }\n\n  async ionViewDidEnter() {\n\n    if (!this.subcategories.length) {\n      await this.showLoadingView({ showOverlay: false });\n      this.loadData();\n    } else {\n      this.onContentLoaded();\n    }\n\n    const title = await this.getTrans('CATEGORIES');\n    this.setPageTitle(title);\n\n    this.setMetaTags({\n      title: title\n    });\n\n  }\n\n  async loadData(event: any = {}) {\n\n    this.refresher = event.target;\n\n    try {\n\n      const appConfig = await this.appConfigService.load();\n      this.layout = appConfig?.layout?.subcategoryList;\n\n      this.subcategories = await this.subCategoryService.load(this.params);\n\n      if (this.subcategories.length) {\n        this.showContentView();\n      } else {\n        this.showEmptyView();\n      }\n\n      this.onRefreshComplete();\n      this.onContentLoaded();\n      \n    } catch (error) {\n      this.translate.get('ERROR_NETWORK').subscribe((str) => this.showToast(str));\n      this.onRefreshComplete();\n      this.showErrorView();\n    }\n\n  }\n\n  trackByFn(index: number, item: any) {\n    if (!item) return null;\n    return item.id;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport * as Parse from 'parse';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppConfigService extends Parse.Object {\n\n  constructor() {\n    super('AppConfig');\n  }\n\n  load(): Promise<AppConfigService> {\n    return Parse.Cloud.run('getAppConfig');\n  }\n\n  get about(): any {\n    return this.get('about');\n  }\n\n  get admin(): any {\n    return this.get('admin');\n  }\n\n  get layout(): any {\n    return this.get('layout');\n  }\n\n  get auth(): any {\n    return this.get('auth');\n  }\n}\n\nParse.Object.registerSubclass('AppConfig', AppConfigService);"]}