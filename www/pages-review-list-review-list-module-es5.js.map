{"version":3,"sources":["webpack:///src/app/pages/review-list/review-list.module.ts","webpack:///src/app/pages/review-list/review-list.html","webpack:///src/app/pages/review-list/review-list.ts"],"names":["ReviewListPageModule","forChild","path","component","declarations","imports","ReviewListPage","injector","reviewService","reviews","params","Object","assign","getParams","limit","page","skeletonReviews","Array","setTimeout","contentLoaded","next","loadAndScroll","content","ionScroll","showLoadingView","showOverlay","itemId","loadItem","item","getTrans","str","title","name","setPageTitle","setMetaTags","loadData","id","fetch","load","review","push","length","showContentView","showEmptyView","onContentLoaded","onRefreshComplete","showErrorView","message","showToast","event","infiniteScroll","target","refresher","index","onReload","opacity","transform","optional","selector","templateUrl","styleUrls","animations"],"mappings":"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","file":"pages-review-list-review-list-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ReviewListPage } from './review-list';\nimport { SharedModule } from '../../shared.module';\n \n@NgModule({\n  declarations: [\n    ReviewListPage,\n  ],\n  imports: [\n    SharedModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: ReviewListPage\n      }\n    ])\n  ]\n})\nexport class ReviewListPageModule {}\n","<ion-header class=\"ion-no-border\">\n  <ion-toolbar fixed>\n    <ion-buttons slot=\"start\">\n      <ion-back-button></ion-back-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content scrollEvents=\"true\">\n\n  <ion-refresher slot=\"fixed\" (ionRefresh)=\"onReload($event)\">\n    <ion-refresher-content pullingText=\"{{ 'PULL_TO_REFRESH' | translate }}\"\n      refreshingText=\"{{ 'REFRESHING' | translate }}\">\n    </ion-refresher-content>\n  </ion-refresher>\n\n  <ion-grid fixed>\n\n    <empty-view *ngIf=\"isErrorViewVisible\" icon=\"alert-circle-outline\" [text]=\"'ERROR_REVIEWS' | translate\">\n    </empty-view>\n\n    <empty-view *ngIf=\"isEmptyViewVisible\" icon=\"star\" [text]=\"'EMPTY_REVIEWS' | translate\">\n    </empty-view>\n\n    <ion-row class=\"ion-justify-content-center\">\n      <ion-col size-xs=\"12\" size-lg=\"10\">\n\n        <section *ngIf=\"isLoadingViewVisible\">\n          <div class=\"skeleton-item light-bg radius\" *ngFor=\"let item of skeletonReviews\">\n            <div class=\"wrapper\">\n              <div class=\"avatar\">\n                <ngx-skeleton-loader appearance=\"circle\" [theme]=\"{ width: '80px', height: '80px' }\">\n                </ngx-skeleton-loader>\n              </div>\n              <div class=\"title\">\n                <div>\n                  <ngx-skeleton-loader\n                    [theme]=\"{ width: '30%', 'border-radius': '0', height: '15px', 'margin-bottom': '10px'}\">\n                  </ngx-skeleton-loader>\n                </div>\n                <div>\n                  <ngx-skeleton-loader [theme]=\"{ width: '70%', 'border-radius': '0', height: '15px' }\">\n                  </ngx-skeleton-loader>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        <ion-list lines=\"none\" [@staggerIn]=\"reviews.length\" *ngIf=\"isContentViewVisible\">\n          <div class=\"ion-margin-bottom ion-padding\" *ngFor=\"let review of reviews;trackBy:trackByFn\">\n            <ion-item class=\"ion-no-padding\">\n\n              <ion-avatar slot=\"start\">\n                <img defaultImage=\"./assets/imgs/avatar.png\" [lazyLoad]=\"review.user?.photo?.url()\"\n                  [customObservable]=\"loadAndScroll\" />\n              </ion-avatar>\n\n              <ion-label>\n                <ion-text color=\"dark\">\n                  <p class=\"no-margin\">\n                    {{ review.user?.name || ('GUEST' | translate) }}\n                  </p>\n                </ion-text>\n                <ion-text color=\"medium\">\n                  <p class=\"text-medium\">\n                    {{ review.createdAt | dateGlobal:'mediumDate' }}\n                  </p>\n                </ion-text>\n                <bar-rating [rate]=\"review.rating\" [readOnly]=\"true\" [max]=\"5\" [theme]=\"'stars'\">\n                </bar-rating>\n              </ion-label>\n            </ion-item>\n            <div>\n              <ion-text color=\"dark\">\n                <p class=\"no-margin\">{{ review.comment }}</p>\n              </ion-text>\n            </div>\n          </div>\n        </ion-list>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n\n  <ion-infinite-scroll *ngIf=\"isContentViewVisible\" (ionInfinite)=\"onLoadMore($event)\">\n    <ion-infinite-scroll-content></ion-infinite-scroll-content>\n  </ion-infinite-scroll>\n\n</ion-content>","\nimport { Component, Injector, ViewChild } from '@angular/core';\nimport { Review } from '../../services/review';\nimport { Item } from 'src/app/services/item';\nimport { BasePage } from '../base-page/base-page';\nimport { IonContent } from '@ionic/angular';\nimport { Subject, Observable, merge } from 'rxjs';\nimport {\n  trigger,\n  style,\n  animate,\n  transition,\n  query,\n  stagger\n} from '@angular/animations';\n\n@Component({\n  selector: 'page-review-list',\n  templateUrl: 'review-list.html',\n  styleUrls: ['review-list.scss'],\n  animations: [\n    trigger('staggerIn', [\n      transition('* => *', [\n        query(':enter', style({ opacity: 0, transform: `translate3d(0,10px,0)` }), { optional: true }),\n        query(':enter', stagger('100ms', [animate('300ms', style({ opacity: 1, transform: `translate3d(0,0,0)` }))]), { optional: true })\n      ])\n    ])\n  ]\n})\nexport class ReviewListPage extends BasePage {\n\n  @ViewChild(IonContent) content: IonContent;\n\n  protected contentLoaded: Subject<any>;\n  protected loadAndScroll: Observable<any>;\n\n  public reviews: Review[] = [];\n  public params: any = {};\n  public skeletonReviews: Array<any>;\n\n  constructor(injector: Injector, private reviewService: Review) {\n    super(injector);\n    this.params = Object.assign({}, this.getParams());\n    this.params.limit = 20;\n    this.params.page = 0;\n    this.skeletonReviews = Array(10);\n  }\n\n  enableMenuSwipe() {\n    return false;\n  }\n\n  onContentLoaded() {\n    setTimeout(() => {\n      this.contentLoaded.next();\n    }, 400);\n  }\n\n  async ionViewDidEnter() {\n\n    this.contentLoaded = new Subject();\n\n    this.loadAndScroll = merge(\n      this.content.ionScroll,\n      this.contentLoaded\n    );\n\n    await this.showLoadingView({ showOverlay: false });\n\n    if (this.params.itemId) {\n      this.params.item = await this.loadItem();\n\n      const str = await this.getTrans('REVIEWS');\n\n      const title = this.params.item.name + ' - ' + str;\n      this.setPageTitle(title);\n\n      this.setMetaTags({\n        title: title\n      });\n    }\n\n    this.loadData();\n  }\n\n  async loadItem() {\n    const item = new Item;\n    item.id = this.params.itemId;\n    return await item.fetch();\n  }\n\n  async loadData() {\n\n    try {\n\n      const reviews = await this.reviewService.load(this.params);\n      \n      for (let review of reviews) {\n        this.reviews.push(review);\n      }\n\n      if (this.reviews.length) {\n        this.showContentView();\n      } else {\n        this.showEmptyView();\n      }\n      \n      this.onContentLoaded();\n      this.onRefreshComplete(reviews);\n      \n    } catch (error) {\n\n      if (this.reviews.length) {\n        this.showContentView();\n      } else {\n        this.showErrorView();\n      }\n\n      this.onRefreshComplete();\n\n      let message = await this.getTrans('ERROR_NETWORK');\n      this.showToast(message);\n    }\n  }\n\n  onLoadMore(event: any = {}) {\n    this.infiniteScroll = event.target;\n    this.params.page++;\n    this.loadData();\n  }\n\n  onReload(event: any = {}) {\n    this.refresher = event.target;\n    this.reviews = [];\n    this.params.page = 0;\n    this.loadData();\n  }\n\n  trackByFn(index: number, item: any) {\n    if (!item) return null;\n    return item.id;\n  }\n\n}\n"]}