{"version":3,"sources":["./src/app/pages/address-add/address-add.module.ts","./src/app/pages/address-add/address-add.ts","./src/app/pages/address-add/address-add.html","./src/app/services/customer-address.ts","./src/app/services/zone.ts"],"names":[],"mappings":"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","file":"default~pages-address-list-address-list-module~pages-checkout-page-checkout-page-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { AddressAddPage } from './address-add';\nimport { SharedModule } from '../../shared.module';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AddressAddPage,\n  ],\n  imports: [\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  entryComponents: [\n    AddressAddPage\n  ]\n})\nexport class AddressAddPageModule {}\n","import { Component, Injector } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { BasePage } from '../base-page/base-page';\nimport { CustomerAddress } from '../../services/customer-address';\nimport { Zone } from '../../services/zone';\n\n@Component({\n  selector: 'address-add',\n  templateUrl: './address-add.html',\n  styleUrls: ['./address-add.scss']\n})\nexport class AddressAddPage extends BasePage {\n\n  public form: FormGroup;\n  public zones: Zone[] = [];\n  public subzones: Zone[] = [];\n\n  constructor(injector: Injector,\n    private zoneService: Zone,\n    private customerAddressService: CustomerAddress) {\n    super(injector);\n  }\n\n  ngOnInit() {\n    this.setupForm();\n  }\n\n  enableMenuSwipe(): boolean {\n    return false;\n  }\n\n  ionViewDidEnter() {\n    this.loadZones();\n  }\n\n  setupForm() {\n    this.form = new FormGroup({\n      zone: new FormControl(null, Validators.required),\n      subzone: new FormControl(null, Validators.required),\n      city: new FormControl('', Validators.required),\n      zipcode: new FormControl('', Validators.required),\n      address: new FormControl('', Validators.required),\n      name: new FormControl('', Validators.required),\n      phone: new FormControl('', Validators.required),\n      isDefault: new FormControl(false),\n    });\n  }\n\n  onDismiss(address: CustomerAddress = null) {\n    this.modalCtrl.dismiss(address);\n  }\n\n  async loadZones() {\n    try {\n      this.zones = await this.zoneService.load({ type: 'Parent' });\n    } catch (error) {\n      console.warn(error.message);\n    }\n  }\n\n  async onZoneChanged() {\n    try {\n      this.form.controls.subzone.setValue(null);\n      this.subzones = await this.zoneService.load({ parent: this.form.value.zone });\n    } catch (error) {\n      console.warn(error.message);\n    }\n  }\n\n  async onSubmit() {\n\n    if (this.form.invalid) {\n      return this.translate.get('INVALID_FORM').subscribe(str => this.showToast(str));\n    }\n\n    try {\n\n      await this.showLoadingView({ showOverlay: false });\n      \n      const formData = Object.assign({}, this.form.value);\n      const address = await this.customerAddressService.create(formData);\n      \n      this.showContentView();\n      this.onDismiss(address);\n      \n    } catch (error) {\n      this.showContentView();\n      this.translate.get('ERROR_NETWORK').subscribe(str => this.showToast(str));\n    }\n\n  }\n\n}\n","<ion-header class=\"ion-no-border\">\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-button fill=\"clear\" (click)=\"onDismiss()\">\n        <ion-icon name=\"close\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"ion-padding\">\n\n  <ion-text color=\"dark\">\n    <h4 class=\"bold ion-no-margin\">\n      {{ 'SHIPPING_INFO' | translate }}\n    </h4>\n    <div class=\"line\"></div>\n  </ion-text>\n\n  <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" #form1=\"ngForm\" novalidate>\n    <ion-list lines=\"none\">\n\n      <ion-label position=\"stacked\" color=\"medium\">\n        <span>{{ 'ZONE' | translate }}</span>\n      </ion-label>\n      <ion-item class=\"ion-margin-vertical\" lines=\"none\" color=\"light\">\n        <ion-label>{{ 'ZONE' | translate }}</ion-label>\n        <ion-select (ionChange)=\"onZoneChanged()\" formControlName=\"zone\">\n          <ion-select-option *ngFor=\"let zone of zones\" [value]=\"zone\">\n            {{ zone.name }}\n          </ion-select-option>\n        </ion-select>\n      </ion-item>\n\n      <ion-label position=\"stacked\" color=\"medium\">\n        <span>{{ 'SUBZONE' | translate }}</span>\n      </ion-label>\n      <ion-item class=\"ion-margin-vertical\" lines=\"none\" color=\"light\">\n        <ion-label>{{ 'SUBZONE' | translate }}</ion-label>\n        <ion-select formControlName=\"subzone\">\n          <ion-select-option *ngFor=\"let subzone of subzones\" [value]=\"subzone\">\n            {{ subzone.name }}\n          </ion-select-option>\n        </ion-select>\n      </ion-item>\n\n      <ion-label position=\"stacked\" color=\"medium\">\n        <span>{{ 'CITY' | translate }}</span>\n      </ion-label>\n      <ion-item class=\"ion-margin-vertical\" lines=\"none\" color=\"light\">\n        <ion-input type=\"text\" formControlName=\"city\"></ion-input>\n      </ion-item>\n\n      <ion-label position=\"stacked\" color=\"medium\">\n        <span>{{ 'ZIPCODE' | translate }}</span>\n      </ion-label>\n      <ion-item class=\"ion-margin-vertical\" lines=\"none\" color=\"light\">\n        <ion-input type=\"text\" formControlName=\"zipcode\"></ion-input>\n      </ion-item>\n\n      <ion-label position=\"stacked\" color=\"medium\">\n        <span>{{ 'SHIPPING_ADDRESS' | translate }}</span>\n      </ion-label>\n      <ion-item class=\"ion-margin-vertical\" lines=\"none\" color=\"light\">\n        <ion-textarea rows=\"4\" formControlName=\"address\"></ion-textarea>\n      </ion-item>\n\n      <ion-label position=\"stacked\" color=\"medium\">\n        <span>{{ 'CONTACT_NAME' | translate }}</span>\n      </ion-label>\n      <ion-item class=\"ion-margin-vertical\" lines=\"none\" color=\"light\">\n        <ion-input type=\"text\" formControlName=\"name\"></ion-input>\n      </ion-item>\n\n      <ion-label position=\"stacked\" color=\"medium\">\n        <span>{{ 'CONTACT_PHONE' | translate }}</span>\n      </ion-label>\n      <ion-item class=\"ion-margin-vertical\" lines=\"none\" color=\"light\">\n        <ion-input type=\"tel\" formControlName=\"phone\"></ion-input>\n      </ion-item>\n\n      <ion-item class=\"ion-margin-vertical\" lines=\"none\">\n        <ion-label>\n          <span class=\"text-medium\">\n            {{ 'SET_AS_DEFAULT' | translate }}\n          </span>\n        </ion-label>\n        <ion-checkbox slot=\"start\" formControlName=\"isDefault\"></ion-checkbox>\n      </ion-item>\n\n      <div>\n        <ion-button type=\"submit\" shape=\"round\" color=\"primary\" strong>\n          {{ 'SAVE' | translate }}\n        </ion-button>\n      </div>\n\n    </ion-list>\n  </form>\n</ion-content>","import { Injectable } from '@angular/core';\nimport * as Parse from 'parse';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerAddress extends Parse.Object {\n\n  constructor() {\n    super('CustomerAddress');\n  }\n\n  create(params: any = {}): Promise<CustomerAddress> {\n    const obj = new CustomerAddress();\n    return obj.save(params);\n  }\n\n  load(): Promise<CustomerAddress[]> {\n    const query = new Parse.Query(CustomerAddress);\n    query.include(['zone', 'subzone']);\n    query.equalTo('customer', Parse.User.current());\n    query.descending('isDefault');\n    query.addDescending('createdAt');\n    return query.find();\n  }\n\n  get address(): string {\n    return this.get('address');\n  }\n\n  set address(val) {\n    this.set('address', val);\n  }\n\n  get zone(): any {\n    return this.get('zone');\n  }\n\n  set zone(val) {\n    this.set('zone', val);\n  }\n\n  get subzone(): any {\n    return this.get('subzone');\n  }\n\n  set subzone(val) {\n    this.set('subzone', val);\n  }\n\n  get city(): string {\n    return this.get('city');\n  }\n\n  set city(val) {\n    this.set('city', val);\n  }\n\n  get zipcode(): string {\n    return this.get('zipcode');\n  }\n\n  set zipcode(val) {\n    this.set('zipcode', val);\n  }\n\n  get name(): string {\n    return this.get('name');\n  }\n\n  set name(val) {\n    this.set('name', val);\n  }\n\n  get phone(): string {\n    return this.get('phone');\n  }\n\n  set phone(val) {\n    this.set('phone', val);\n  }\n\n  get isDefault(): boolean {\n    return this.get('isDefault');\n  }\n\n  set isDefault(val) {\n    this.set('isDefault', val);\n  }\n\n  toString(): string {\n    return `${this.address}, ${this.city}, ${this.subzone.name}, ${this.zipcode}, ${this.zone.name}`;\n  }\n\n}\n\nParse.Object.registerSubclass('CustomerAddress', CustomerAddress);\n\n","import { Injectable } from '@angular/core';\nimport * as Parse from 'parse';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Zone extends Parse.Object {\n\n  constructor() {\n    super('Zone');\n  }\n\n  load(params: any = {}): Promise<Zone[]> {\n\n    const query = new Parse.Query(Zone);\n\n    if (params.type) {\n      query.equalTo('type', params.type)\n    }\n\n    if (params.parent) {\n      query.equalTo('parent', params.parent)\n    }\n\n    query.ascending('name');\n    query.equalTo('isActive', true);\n    query.doesNotExist('deletedAt');\n    return query.find();\n  }\n\n  get name(): string {\n    return this.get('name');\n  }\n\n  get fee(): number {\n    return this.get('fee');\n  }\n\n  toString(): string {\n    return this.name;\n  }\n\n}\n\nParse.Object.registerSubclass('Zone', Zone);\n\n"],"sourceRoot":"webpack:///"}