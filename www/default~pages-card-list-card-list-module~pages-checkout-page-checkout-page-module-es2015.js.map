{"version":3,"sources":["./src/app/pages/card-add/card-add.module.ts","./src/app/pages/card-add/card-add.ts","./src/app/pages/card-add/card-add.html"],"names":[],"mappings":"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","file":"default~pages-card-list-card-list-module~pages-checkout-page-checkout-page-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CardAddPage } from './card-add';\nimport { SharedModule } from '../../shared.module';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgxStripeModule } from \"@nomadreservations/ngx-stripe\";\n\n@NgModule({\n  declarations: [\n    CardAddPage,\n  ],\n  imports: [\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxStripeModule,\n  ],\n  entryComponents: [\n    CardAddPage\n  ]\n})\nexport class CardAddPageModule {}\n","import { Component, Injector, ViewChild, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Card } from '../../services/card';\nimport { BasePage } from '../base-page/base-page';\nimport { StripeService, StripeCardComponent, ElementOptions, ElementsOptions } from '@nomadreservations/ngx-stripe';\n\n@Component({\n  selector: 'card-add',\n  templateUrl: './card-add.html',\n  styleUrls: ['./card-add.scss']\n})\nexport class CardAddPage extends BasePage implements OnInit {\n\n  @ViewChild(StripeCardComponent) card: StripeCardComponent;\n\n  public form: FormGroup;\n  public isSaving: boolean = false;\n  public cardOptions: ElementOptions = {\n    hidePostalCode: true,\n    style: {\n      base: {\n        fontFamily: '\"Quicksand\", sans-serif',\n        fontWeight: 300,\n        lineHeight: 2,\n        fontSize: '12px',\n      }\n    }\n  };\n  public elementsOptions: ElementsOptions = {};\n\n  constructor(injector: Injector,\n    private stripeService: StripeService,\n    private creditCardService: Card) {\n    super(injector);\n  }\n\n  ngOnInit() {\n    this.setupForm();\n    this.setupStripeCard();\n  }\n\n  enableMenuSwipe() {\n    return false;\n  }\n\n  setupStripeCard() {\n    this.elementsOptions.locale = this.preference.lang;\n  }\n\n  setupForm() {\n    this.form = new FormGroup({\n      name: new FormControl('', Validators.required),\n      isDefault: new FormControl(false),\n    });\n  }\n\n  onDismiss(card: Card = null) {\n    this.modalCtrl.dismiss(card);\n  }\n\n  async onSubmit() {\n\n    if (this.form.invalid) {\n      return this.translate.get('INVALID_FORM').subscribe(str => this.showToast(str));\n    }\n\n    try {\n\n      this.isSaving = true;\n\n      const formData = Object.assign({}, this.form.value);\n\n      const { token, error } = await this.stripeService\n        .createToken(this.card.getCard(), formData)\n        .toPromise();\n\n      if (error) {\n        this.isSaving = false;\n        return this.showToast(error.message);\n      }\n\n      const card = await this.creditCardService.create({\n        stripeToken: token.id,\n        isDefault: formData.isDefault,\n      });\n\n      this.isSaving = false;\n\n      this.onDismiss(card);\n\n    } catch (error) {\n\n      let errorMessage = 'ERROR_NETWORK';\n\n      if (typeof error === 'string' || error.code === 1002) {\n        errorMessage = 'CARD_INVALID';\n      }\n\n      this.isSaving = false;\n      this.translate.get(errorMessage).subscribe(str => this.showToast(str));\n    }\n\n  }\n\n}","<ion-header class=\"ion-no-border\">\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-button fill=\"clear\" (click)=\"onDismiss()\">\n        <ion-icon name=\"close\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"ion-padding\">\n\n  <div class=\"ion-margin-bottom\">\n    <ion-text color=\"dark\">\n      <h4 class=\"bold ion-no-margin\">\n        {{ 'BILLING_INFO' | translate }}\n      </h4>\n      <div class=\"line\"></div>\n    </ion-text>\n  </div>\n\n  <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" #form1=\"ngForm\" novalidate>\n\n    <ngx-stripe-card [options]=\"cardOptions\" [elementsOptions]=\"elementsOptions\">\n    </ngx-stripe-card>\n\n    <ion-list class=\"ion-margin-top\" lines=\"none\">\n\n      <ion-label position=\"stacked\" color=\"medium\">\n        <span>{{ 'CARDHOLDER_NAME' | translate }}</span>\n      </ion-label>\n      <ion-item class=\"ion-margin-vertical\" color=\"light\" lines=\"none\">\n        <ion-input type=\"text\" formControlName=\"name\"></ion-input>\n      </ion-item>\n\n      <ion-item class=\"ion-margin-vertical\" lines=\"none\">\n        <ion-label>\n          <span class=\"text-medium\">\n            {{ 'SET_AS_DEFAULT' | translate }}\n          </span>\n        </ion-label>\n        <ion-checkbox slot=\"start\" formControlName=\"isDefault\"></ion-checkbox>\n      </ion-item>\n\n      <div>\n        <ion-button type=\"submit\" shape=\"round\" color=\"primary\" [disabled]=\"isSaving\" strong>\n          <ion-spinner color=\"light\" *ngIf=\"isSaving\"></ion-spinner>\n          <span *ngIf=\"!isSaving\">{{ 'SAVE' | translate }}</span>\n        </ion-button>\n      </div>\n\n    </ion-list>\n\n  </form>\n\n</ion-content>"],"sourceRoot":"webpack:///"}