{"version":3,"sources":["webpack:///src/app/pages/page/page.module.ts","webpack:///src/app/pages/page/page.page.html","webpack:///src/app/pages/page/page.page.ts"],"names":["routes","path","component","PageViewModule","forChild","imports","declarations","PageView","injector","pageService","showLoadingView","showOverlay","loadPage","loadOne","getParams","id","page","content","sanitizer","bypassSecurityTrustHtml","setPageTitle","title","setMetaTags","showContentView","code","showEmptyView","showErrorView","translate","get","subscribe","str","showToast","ev","href","target","getAttribute","preventDefault","openUrl","selector","templateUrl","styleUrls"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAUA,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;QAiBaC,c;;;;;YAAAA;;;;yBAAAA,c;AAAc,O;AAAA,gBAThB,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,kEAJO,EAKP,6DAAaC,QAAb,CAAsBJ,MAAtB,CALO,CASgB;;;;0HAAdG,c,EAAc;AAAA,uBAFV,mDAEU;AAFF,kBANrB,4DAMqB,EALrB,0DAKqB,EAJrB,0DAIqB,EAHrB,kEAGqB,EAHT,4DAGS;AAEE,O;AALX,K;;;;;sEAKHA,c,EAAc;cAV1B,sDAU0B;eAVjB;AACRE,iBAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,kEAJO,EAKP,6DAAaD,QAAb,CAAsBJ,MAAtB,CALO,CADD;AAQRM,sBAAY,EAAE,CAAC,mDAAD;AARN,S;AAUiB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdvB;;;;;;AAAmE;;;;;;AAGnE;;;;;;AAAmE;;;;;;;;;;;;;;;;;;;;;;AAM/D;;AACE;;AAGA;;AAEF;;;;AAJI;;AAAA;;AAE8B;;AAAA;;;;;;;;AAQ9B;;AAA0C;AAAA;;AAAA;;AAAA;AAAA;;AAC1C;;;;;;AAD6E;;;;;;AAJjF;;AAEE;;AACE;;AAAiB;;AAAiB;;AAClC;;AAEF;;AACF;;;;;;AAJqB;;AAAA;;AACS;;AAAA;;;;QCzBzBC,Q;;;;;AAKX,wBAAYC,QAAZ,EACUC,WADV,EAC6B;AAAA;;AAAA;;AAC3B,kCAAMD,QAAN;AADQ,cAAAC,WAAA,GAAAA,WAAA;AAAmB;AAE5B;;;;0CAEiB;AAChB,iBAAO,IAAP;AACD;;;mCAEU,CACV;;;0CAEuB;;;;;;;AACtB,2BAAM,KAAKC,eAAL,CAAqB;AAAEC,iCAAW,EAAE;AAAf,qBAArB,CAAN;;;AACA,yBAAKC,QAAL;;;;;;;;;AACD;;;mCAEgB;;;;;;;;;;AAGD,2BAAM,KAAKH,WAAL,CAAiBI,OAAjB,CAAyB,KAAKC,SAAL,GAAiBC,EAA1C,CAAN;;;AAAZ,yBAAKC,I;;AAEL,wBAAI,KAAKA,IAAL,CAAUC,OAAd,EAAuB;AACrB,2BAAKA,OAAL,GAAe,KAAKC,SAAL,CACdC,uBADc,CACU,KAAKH,IAAL,CAAUC,OADpB,CAAf;AAED;;AAED,yBAAKG,YAAL,CAAkB,KAAKJ,IAAL,CAAUK,KAA5B;AAEA,yBAAKC,WAAL,CAAiB;AACfD,2BAAK,EAAE,KAAKL,IAAL,CAAUK;AADF,qBAAjB;AAIA,yBAAKE,eAAL;;;;;;;;AAIA,wBAAI,aAAMC,IAAN,KAAe,GAAnB,EAAwB;AACtB,2BAAKC,aAAL;AACD,qBAFD,MAEO;AACL,2BAAKC,aAAL;AACD;;AAED,yBAAKC,SAAL,CAAeC,GAAf,CAAmB,eAAnB,EAAoCC,SAApC,CAA8C,UAAAC,GAAG;AAAA,6BAAI,MAAI,CAACC,SAAL,CAAeD,GAAf,CAAJ;AAAA,qBAAjD;;;;;;;;;AAEH;;;2CAE8B;AAAA,cAAdE,EAAc,uEAAJ,EAAI;AAC7B,cAAMC,IAAI,GAAGD,EAAE,CAACE,MAAH,CAAUC,YAAV,CAAuB,MAAvB,CAAb;;AACA,cAAIF,IAAJ,EAAU;AACRD,cAAE,CAACI,cAAH;AACA,iBAAKC,OAAL,CAAaJ,IAAb;AACD;AACF;;;;MA1D2B,6D;;;uBAAjB1B,Q,EAAQ,uH,EAAA,oH;AAAA,K;;;YAARA,Q;AAAQ,+B;AAAA,0F;AAAA,e;AAAA,a;AAAA,ge;AAAA;AAAA;ADTrB;;AACE;;AACE;;AACE;;AACF;;AACA;;AAAW;;AAAiB;;AAC9B;;AACF;;AAEA;;AAEE;;AAEE;;AAGA;;AAGA;;AACE;;AAEE;;AAQA;;AASF;;AACF;;AAEF;;AAEF;;;;AAvCe;;AAAA;;AAQC;;AAAA;;AAGA;;AAAA;;AAMH;;AAAA;;AAQA;;AAAA;;;;;;;;;;sECrBAA,Q,EAAQ;cALpB,uDAKoB;eALV;AACT+B,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,kBAFJ;AAGTC,mBAAS,EAAE,CAAC,kBAAD;AAHF,S;AAKU,Q","file":"pages-page-page-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PageView } from './page.page';\nimport { SharedModule } from 'src/app/shared.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PageView\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SharedModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [PageView]\n})\nexport class PageViewModule {}\n","<ion-header class=\"ion-no-border\">\n  <ion-toolbar fixed>\n    <ion-buttons slot=\"start\">\n      <ion-back-button></ion-back-button>\n    </ion-buttons>\n    <ion-title>{{ page?.title }}</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n\n  <ion-grid fixed>\n\n    <empty-view *ngIf=\"isEmptyViewVisible\" icon=\"alert-circle-outline\" [text]=\"'EMPTY_DATA' | translate\">\n    </empty-view>\n\n    <empty-view *ngIf=\"isErrorViewVisible\" icon=\"alert-circle-outline\" [text]=\"'ERROR_NETWORK' | translate\">\n    </empty-view>\n\n    <ion-row class=\"ion-justify-content-center\">\n      <ion-col size-xs=\"12\" size-lg=\"8\">\n\n        <div *ngIf=\"isLoadingViewVisible\">\n          <ngx-skeleton-loader count=\"1\" appearance=\"circle\"\n            [theme]=\"{ 'border-radius': '0', margin: '0 0 16px', height: '250px', width: '100%' }\">\n          </ngx-skeleton-loader>\n          <ngx-skeleton-loader count=\"16\" [theme]=\"{ 'border-radius': '0', height: '10px' }\">\n          </ngx-skeleton-loader>\n        </div>\n\n        <div *ngIf=\"isContentViewVisible\">\n\n          <div class=\"ion-margin-top\">\n            <h3 class=\"bold\">{{ page?.title }}</h3>\n            <div class=\"html-content\" *ngIf=\"content\" (click)=\"onContentTouched($event)\" [innerHTML]=\"content\">\n            </div>\n          </div>\n        </div>\n\n      </ion-col>\n    </ion-row>\n\n  </ion-grid>\n\n</ion-content>","import { Component, Injector, OnInit } from '@angular/core';\nimport { Page } from '../../services/page';\nimport { BasePage } from '../base-page/base-page';\n\n@Component({\n  selector: 'app-page',\n  templateUrl: './page.page.html',\n  styleUrls: ['./page.page.scss'],\n})\nexport class PageView extends BasePage implements OnInit {\n\n  public page: Page;\n  public content: any;\n\n  constructor(injector: Injector,\n    private pageService: Page) {\n    super(injector);\n  }\n\n  enableMenuSwipe() {\n    return true;\n  }\n\n  ngOnInit() {\n  }\n\n  async ionViewDidEnter() {\n    await this.showLoadingView({ showOverlay: false });\n    this.loadPage();\n  }\n\n  async loadPage() {\n    try {\n\n      this.page = await this.pageService.loadOne(this.getParams().id);\n\n      if (this.page.content) {\n        this.content = this.sanitizer\n        .bypassSecurityTrustHtml(this.page.content);\n      }\n\n      this.setPageTitle(this.page.title);\n\n      this.setMetaTags({\n        title: this.page.title\n      });\n\n      this.showContentView();\n      \n    } catch (error) {\n\n      if (error.code === 101) {\n        this.showEmptyView();\n      } else {\n        this.showErrorView();\n      }\n\n      this.translate.get('ERROR_NETWORK').subscribe(str => this.showToast(str));\n    }\n  }\n\n  onContentTouched(ev: any = {}) {\n    const href = ev.target.getAttribute('href');\n    if (href) {\n      ev.preventDefault();\n      this.openUrl(href);\n    }\n  }\n\n}\n"]}