{"version":3,"sources":["webpack:///src/app/pages/cart-page/cart-page.module.ts","webpack:///src/app/pages/cart-page/cart-page.html","webpack:///src/app/pages/cart-page/cart-page.ts"],"names":["CartPageModule","forChild","path","component","declarations","imports","$event","stopPropagation","CartPage","injector","cartService","subtotal","window","addEventListener","cart","showEmptyView","loadData","contentLoaded","setupObservable","content","scrollToTop","getCurrent","showLoadingView","showOverlay","getTrans","title","setPageTitle","setMetaTags","loadAndScroll","ionScroll","setTimeout","next","event","refresher","target","getOne","empty","showContentView","status","onCartExpired","onContentLoaded","onRefreshComplete","showErrorView","translate","get","subscribe","str","showToast","item","qty","amount","salePrice","price","calculateSubtotal","onRemoveItem","navigateToRelative","objectId","slug","showConfirm","res","index","items","indexOf","splice","save","dispatchEvent","CustomEvent","detail","dirty","isSavingCart","selector","templateUrl","styleUrls"],"mappings":"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","file":"pages-cart-page-cart-page-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CartPage } from './cart-page';\nimport { SharedModule } from '../../shared.module';\n\n@NgModule({\n  declarations: [\n    CartPage,\n  ],\n  imports: [\n    RouterModule.forChild([\n      {\n        path: '',\n        component: CartPage\n      }\n    ]),\n    SharedModule\n  ],\n})\nexport class CartPageModule {}\n","<ion-header class=\"ion-no-border\">\n  <ion-toolbar fixed></ion-toolbar>\n</ion-header>\n\n<ion-content #container scrollEvents=\"true\">\n\n  <ion-refresher slot=\"fixed\" (ionRefresh)=\"loadData($event)\">\n    <ion-refresher-content pullingText=\"{{ 'PULL_TO_REFRESH' | translate }}\"\n      refreshingText=\"{{ 'REFRESHING' | translate }}\">\n    </ion-refresher-content>\n  </ion-refresher>\n\n  <ion-grid fixed>\n\n    <empty-view *ngIf=\"isErrorViewVisible\" icon=\"alert-circle-outline\" [text]=\"'ERROR_DATA' | translate\">\n    </empty-view>\n\n    <empty-view *ngIf=\"isEmptyViewVisible\" image=\"./assets/imgs/undraw_add_to_cart_vkjp.svg\" imageWidth=\"120\"\n      [text]=\"'CART_EMPTY' | translate\">\n    </empty-view>\n\n    <ion-row *ngIf=\"isContentViewVisible\">\n      <ion-col size-xs=\"12\" size-lg=\"8\">\n        <ion-list lines=\"none\" inset class=\"ion-no-padding\">\n          <ion-item class=\"radius ion-margin-bottom\" color=\"light\" (click)=\"onItemTouched(item)\"\n            *ngFor=\"let item of cart?.items;let last = last\">\n            <ion-thumbnail slot=\"start\" *ngIf=\"item.featuredImageThumb\">\n              <img src=\"./assets/imgs/placeholder.png\" [lazyLoad]=\"item.featuredImageThumb?.url()\"\n                [customObservable]=\"loadAndScroll\" />\n            </ion-thumbnail>\n\n            <ion-row class=\"full-width ion-align-items-center\">\n              <ion-col size-xs=\"12\" size-md=\"9\">\n                <ion-label class=\"ion-text-wrap\">\n                  <p class=\"link text-normal ellipsis mb-8\">{{ item.name }}</p>\n                  <p *ngIf=\"item.variation\">\n                    <span class=\"bold\">{{ 'VARIANT' | translate }}:</span> {{ item.variation.name }}\n                  </p>\n                  <p class=\"bold\">\n                    {{ item.amount | currencyGlobal }}\n                  </p>\n                </ion-label>\n              </ion-col>\n              <ion-col size-xs=\"12\" size-md=\"3\">\n                <div class=\"flex align-items-center\">\n                  <ion-button fill=\"clear\" style=\"--padding-start:0\"\n                    (click)=\"decrementQuantity(item); $event.stopPropagation()\">\n                    <ion-icon name=\"remove-circle-outline\" slot=\"icon-only\" color=\"dark\"></ion-icon>\n                  </ion-button>\n                  <span class=\"label-quantity\">{{ item.qty }}</span>\n                  <ion-button fill=\"clear\" (click)=\"incrementQuantity(item); $event.stopPropagation()\">\n                    <ion-icon name=\"add-circle-outline\" slot=\"icon-only\" color=\"dark\"></ion-icon>\n                  </ion-button>\n                </div>\n              </ion-col>\n            </ion-row>\n\n          </ion-item>\n        </ion-list>\n      </ion-col>\n      <ion-col size-xs=\"12\" size-lg=\"4\">\n        <div class=\"bg-light radius ion-padding ion-margin\">\n          <h5 class=\"bold ion-no-margin\">{{ 'ORDER_SUMMARY' | translate }}</h5>\n          <div class=\"ion-text-center\">\n            <p>{{ 'TOTAL' | translate }}: {{ subtotal | currencyGlobal }}</p>\n            <ion-button size=\"medium\" shape=\"round\" color=\"primary\" strong\n              [disabled]=\"cart?.empty() || !cart || isSavingCart\" (click)=\"goToCheckout()\">\n              <ion-spinner color=\"light\" *ngIf=\"isSavingCart\"></ion-spinner>\n              <span *ngIf=\"!isSavingCart\">{{ 'CHECKOUT' | translate }}</span>\n            </ion-button>\n            <p class=\"text-small\">{{ 'TRANSACTION_NOTICE' | translate }}</p>\n            <img src=\"./assets/imgs/mastercard.png\" width=\"40\" />\n            <img src=\"./assets/imgs/visa.png\" width=\"40\" />\n            <img src=\"./assets/imgs/american_express.png\" width=\"40\" />\n          </div>\n        </div>\n\n      </ion-col>\n    </ion-row>\n\n    <ion-row class=\"ion-margin\" *ngIf=\"isLoadingViewVisible\">\n      <ion-col size-xs=\"12\" size-lg=\"8\">\n        <ngx-skeleton-loader count=\"6\" [theme]=\"{ 'border-radius': '0', height: '60px' }\">\n        </ngx-skeleton-loader>\n      </ion-col>\n      <ion-col size-xs=\"12\" size-lg=\"4\">\n        <ngx-skeleton-loader count=\"1\" [theme]=\"{ 'border-radius': '0', height: '220px', width: '100%' }\">\n        </ngx-skeleton-loader>\n      </ion-col>\n    </ion-row>\n\n  </ion-grid>\n\n</ion-content>","import { Component, Injector, ViewChild } from '@angular/core';\nimport { IonContent } from '@ionic/angular';\nimport { BasePage } from '../base-page/base-page';\nimport { Cart } from '../../services/cart';\nimport { User } from '../../services/user';\nimport { Subject, Observable, merge } from 'rxjs';\n@Component({\n  selector: 'cart-page',\n  templateUrl: './cart-page.html',\n  styleUrls: ['./cart-page.scss']\n})\nexport class CartPage extends BasePage {\n\n  @ViewChild(IonContent, { static: true }) content: IonContent;\n\n  public cart: Cart;\n  public isSavingCart: boolean;\n\n  protected contentLoaded: Subject<any>;\n  protected loadAndScroll: Observable<any>;\n\n  public subtotal = 0;\n\n  constructor(injector: Injector,\n    private cartService: Cart) {\n\n    super(injector);\n    window.addEventListener('user:loggedOut', () => {\n      this.cart = null;\n      this.showEmptyView();\n    });\n\n    window.addEventListener('user:login', () => {\n      this.loadData();\n    });\n\n    this.contentLoaded = new Subject();\n\n  }\n\n  enableMenuSwipe(): boolean {\n    return true;\n  }\n\n  ngOnInit() {\n    this.setupObservable();\n  }\n\n  ionViewWillEnter() {\n    if (this.content) {\n      this.content.scrollToTop();\n    }\n  }\n\n  async ionViewDidEnter() {\n\n    if (User.getCurrent()) {\n      this.showLoadingView({ showOverlay: false });\n      this.loadData();\n    } else {\n      this.showEmptyView();\n    }\n\n    const title = await this.getTrans('CART');\n    this.setPageTitle(title);\n\n    this.setMetaTags({\n      title: title\n    });\n  }\n\n  setupObservable() {\n    this.loadAndScroll = merge(\n      this.content.ionScroll,\n      this.contentLoaded\n    );\n  }\n\n  onContentLoaded() {\n    setTimeout(() => {\n      this.contentLoaded.next();\n    }, 400);\n  }\n\n  async loadData(event: any = {}) {\n\n    try {\n\n      this.refresher = event.target;\n\n      this.cart = await this.cartService.getOne();\n\n      if (this.cart && !this.cart.empty()) {\n        this.showContentView();\n        this.subtotal = this.cart.subtotal;\n      } else {\n        this.showEmptyView();\n      }\n\n      if (this.cart && this.cart.status === 'expired') {\n        this.onCartExpired(this.cart);\n      }\n\n      this.onContentLoaded();\n\n      this.onRefreshComplete(this.cart);\n      \n    } catch (error) {\n      this.showErrorView();\n      this.translate.get('ERROR_NETWORK').subscribe(str => this.showToast(str));\n    }\n  }\n\n  incrementQuantity(item: any) {\n    item.qty = item.qty + 1;\n    item.amount = item.qty * (item.salePrice || item.price);\n    this.subtotal = this.cart.calculateSubtotal();\n  }\n\n  decrementQuantity(item: any) {\n\n    if (item.qty > 1) {\n      item.qty = item.qty - 1;\n      item.amount = item.qty * (item.salePrice || item.price);\n      this.subtotal = this.cart.calculateSubtotal();\n    } else {\n      this.onRemoveItem(item);\n    }\n  }\n\n  onItemTouched(item: any) {\n    this.navigateToRelative('./items/' + item.objectId + '/' + item.slug);\n  }\n\n  async onRemoveItem(item: any) {\n\n    try {\n\n      let str = await this.getTrans('DELETE_CONFIRMATION');\n      \n      const res = await this.showConfirm(str);\n\n      if (!res) return;\n\n      await this.showLoadingView({ showOverlay: false });\n\n      let index: number = this.cart.items.indexOf(item);\n      if (index !== -1) {\n        this.cart.items.splice(index, 1);\n      }\n\n      await this.cart.save();\n\n      if (this.cart.empty()) {\n        this.subtotal = 0;\n        this.showEmptyView();\n      } else {\n        this.subtotal = this.cart.calculateSubtotal();\n        this.showContentView();\n      }\n\n      window.dispatchEvent(new CustomEvent('cart:updated', {\n        detail: this.cart\n      }));\n      \n    } catch (error) {\n      this.showContentView();\n    }\n\n  }\n\n  onCartExpired(cart: Cart) {\n    this.subtotal = 0;\n    this.showEmptyView();\n    window.dispatchEvent(new CustomEvent('cart:expired', {\n      detail: cart\n    }));\n  }\n\n  async goToCheckout() {\n\n    try {\n      \n      if (this.cart.dirty()) {\n        this.isSavingCart = true;\n        await this.cart.save();\n        this.isSavingCart = false;\n      }\n\n      if (this.cart.status === 'expired') {\n        this.onCartExpired(this.cart);\n      } else {\n        this.navigateToRelative('./checkout');\n      }\n      \n    } catch (error) {\n      this.isSavingCart = false;\n      this.translate.get('ERROR_NETWORK').subscribe(str => this.showToast(str));\n    }\n\n  }\n\n}\n"]}