{"version":3,"sources":["webpack:///src/app/pages/order-detail-page/order-detail-page.module.ts","webpack:///src/app/pages/order-detail-page/order-detail-page.html","webpack:///src/app/pages/order-detail-page/order-detail-page.ts","webpack:///src/app/pages/review-add/review-add.module.ts","webpack:///src/app/pages/review-add/review-add.html","webpack:///src/app/pages/review-add/review-add.ts"],"names":["OrderDetailPageModule","forChild","path","component","declarations","imports","exports","OrderDetailPage","injector","orderService","showLoadingView","showOverlay","getParams","id","orderId","loadOne","order","showContentView","showErrorView","item","modalCtrl","create","componentProps","modal","present","card","brand","toLowerCase","replace","getTrans","str","showConfirm","res","markAsDelivered","selector","templateUrl","styleUrls","ReviewAddPageModule","entryComponents","ReviewAddPage","input","rating","comment","itemId","objectId","message","showToast","review","prepareReviewData","reviewItem","translate","get","subscribe","onDismiss","code","dismiss","onSubmit"],"mappings":"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","file":"pages-order-detail-page-order-detail-page-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { OrderDetailPage } from './order-detail-page';\nimport { SharedModule } from '../../shared.module';\nimport { ReviewAddPageModule } from '../review-add/review-add.module';\n\n@NgModule({\n  declarations: [\n    OrderDetailPage,\n  ],\n  imports: [\n    RouterModule.forChild([\n      {\n        path: '',\n        component: OrderDetailPage,\n      }\n    ]),\n    SharedModule,\n    ReviewAddPageModule,\n  ],\n  exports: [\n    OrderDetailPage\n  ]\n})\nexport class OrderDetailPageModule {}\n","<ion-header class=\"ion-no-border\">\n  <ion-toolbar fixed>\n    <ion-buttons slot=\"start\">\n      <ion-back-button></ion-back-button>\n    </ion-buttons>\n    <ion-title>{{ 'ORDER_TITLE' | translate }}</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n\n  <ion-grid fixed>\n\n    <empty-view *ngIf=\"isEmptyViewVisible\" icon=\"alert-circle-outline\" [text]=\"'EMPTY_DATA' | translate\">\n    </empty-view>\n\n    <empty-view *ngIf=\"isErrorViewVisible\" icon=\"alert-circle-outline\" [text]=\"'ERROR_NETWORK' | translate\">\n    </empty-view>\n\n    <ion-row class=\"ion-justify-content-center\" *ngIf=\"isContentViewVisible\">\n      <ion-col size-xs=\"12\" size-lg=\"8\">\n\n        <div>\n          <ion-list lines=\"none\">\n            <ion-list-header>\n              <div class=\"flex align-items-center\">\n                <h5 class=\"ion-no-margin\">\n                  {{ 'ORDER' | translate }} #{{ order?.number }}&nbsp;&nbsp;\n                </h5>\n                <ion-button class=\"ion-text-capitalize ion-no-margin\" strong size=\"small\" fill=\"solid\" color=\"success\"\n                  [disabled]=\"!order?.isShippedOut()\" (click)=\"onMarkAsReceived()\">\n                  {{ 'MARK_AS_RECEIVED' | translate }}\n                </ion-button>\n              </div>\n            </ion-list-header>\n\n            <ion-list class=\"ion-margin-top ion-no-padding\">\n              <div class=\"radius\" *ngFor=\"let item of order?.items\">\n                <ion-item class=\"cart-item\">\n                  <ion-thumbnail slot=\"start\" *ngIf=\"item.featuredImageThumb\">\n                    <img [src]=\"item.featuredImageThumb?.url()\" />\n                  </ion-thumbnail>\n                  <ion-label class=\"ion-text-wrap\">\n                    <ion-text color=\"dark\">\n                      <p class=\"text-normal mb-8\">{{ item.qty }} x {{ item.name }}</p>\n                      <p *ngIf=\"item.variation\">\n                        <span class=\"bold\">{{ 'VARIANT' | translate }}:</span> {{ item.variation.name }}\n                      </p>\n                    </ion-text>\n\n                  </ion-label>\n\n                  <div slot=\"end\">\n                    <p class=\"text-medium\" *ngIf=\"item.hasOwnProperty('finalAmount'); else showOnlyAmount\">\n                      <span *ngIf=\"item.amount > item.finalAmount\">\n                        <ion-text color=\"medium\">\n                          <s class=\"text-small\">\n                            {{ item.amount | currencyGlobal }}\n                          </s>\n                        </ion-text>\n                        <br />\n                        <span>\n                          {{ item.finalAmount | currencyGlobal }}\n                        </span>\n                      </span>\n                      <span *ngIf=\"item.amount <= item.finalAmount\">\n                        <span>{{ item.finalAmount | currencyGlobal }}</span>\n                      </span>\n                    </p>\n\n                    <ng-template #showOnlyAmount>\n                      <p class=\"text-medium\">\n                        {{ item.amount | currencyGlobal }}\n                      </p>\n                    </ng-template>\n                  </div>\n\n                </ion-item>\n\n                <ion-button class=\"ion-margin ion-text-capitalize\" color=\"dark\" size=\"small\" strong\n                  (click)=\"onPresentReviewAddModal(item)\" [disabled]=\"!order?.isDelivered() || item.rating\">\n                  {{ 'REVIEW_THIS_ITEM' | translate }}\n                </ion-button>\n              </div>\n\n              <div class=\"divider\"></div>\n\n              <ion-item>\n                <ion-label>\n                  <ion-text color=\"dark\">\n                    <p>{{ 'SUBTOTAL' | translate }}</p>\n                  </ion-text>\n                </ion-label>\n\n                <div slot=\"end\">\n                  <ion-text color=\"dark\">\n                    <p class=\"text-medium\">{{ order?.subtotal | currencyGlobal }}</p>\n                  </ion-text>\n                </div>\n              </ion-item>\n\n              <ion-item *ngIf=\"order?.coupon\">\n                <ion-label>\n                  <ion-text color=\"dark\">\n                    <p>\n                      {{ 'COUPON_DISCOUNT' | translate }}\n                      ({{ order?.coupon?.name }})\n                    </p>\n                  </ion-text>\n                </ion-label>\n\n                <div slot=\"end\">\n                  <ion-text color=\"dark\">\n                    <p class=\"text-medium\">\n                      {{ -order?.coupon.amount | currencyGlobal }}\n                    </p>\n                  </ion-text>\n                </div>\n              </ion-item>\n\n              <ion-item>\n                <ion-label>\n                  <ion-text color=\"dark\">\n                    <p>{{ 'SHIPPING_FEE' | translate }}</p>\n                  </ion-text>\n                </ion-label>\n\n                <div slot=\"end\">\n                  <ion-text color=\"dark\">\n                    <p class=\"text-medium\">{{ order?.shippingFee | currencyGlobal }}</p>\n                  </ion-text>\n                </div>\n              </ion-item>\n\n              <ion-item>\n                <ion-label>\n                  <ion-text color=\"dark\">\n                    <p>{{ 'TOTAL' | translate }}</p>\n                  </ion-text>\n                </ion-label>\n\n                <div slot=\"end\">\n                  <ion-text color=\"dark\">\n                    <p class=\"text-medium\">{{ order?.total | currencyGlobal }}</p>\n                  </ion-text>\n                </div>\n              </ion-item>\n\n            </ion-list>\n\n            <ion-list-header class=\"ion-margin-vertical\">\n              <h5>{{ 'CONTACT_INFO' | translate }}</h5>\n            </ion-list-header>\n\n            <ion-item class=\"radius\">\n              <ion-label>\n                <p>{{ order?.contact.email }}</p>\n              </ion-label>\n            </ion-item>\n\n            <ion-list-header class=\"ion-margin-vertical\">\n              <h5>{{ 'SHIPPING_ADDRESS' | translate }}</h5>\n            </ion-list-header>\n\n            <ion-list class=\"ion-no-padding\">\n              <ion-item class=\"radius\">\n                <ion-label>\n                  <h2 class=\"bold\">{{ order?.shipping?.name }}</h2>\n                  <p>\n                    {{ order?.shipping?.address }},\n                    {{ order?.shipping?.city }},\n                    {{ order?.shipping?.subzone?.name }},\n                    {{ order?.shipping?.zipcode }},\n                    {{ order?.shipping?.zone?.name }}\n                  </p>\n                  <p>{{ 'CONTACT_PHONE' | translate }}: {{ order?.shipping.phone }}</p>\n                </ion-label>\n              </ion-item>\n            </ion-list>\n\n            <ion-list-header class=\"ion-margin-vertical\" *ngIf=\"order?.tracking\">\n              <h5 class=\"ion-no-margin\">{{ 'TRACKING' | translate }}</h5>\n            </ion-list-header>\n\n            <ion-list class=\"ion-no-padding\" *ngIf=\"order?.tracking\">\n              <ion-item>\n                <ion-label>\n                  <p>\n                    <span class=\"bold\">{{ 'TRACKING_NUMBER' | translate }}:</span>\n                    {{ order?.tracking.number || '---' }}\n                  </p>\n                  <p>\n                    <span class=\"bold\">{{ 'CARRIER' | translate }}:</span>\n                    {{ order?.tracking.carrier || '---' }}\n                  </p>\n                </ion-label>\n              </ion-item>\n            </ion-list>\n\n            <ion-list-header class=\"ion-margin-vertical\">\n              <h5>{{ 'PAYMENT' | translate }}</h5>\n            </ion-list-header>\n\n            <ion-list class=\"ion-no-padding\">\n\n              <ion-item class=\"radius\" *ngIf=\"order?.paymentMethod === 'Cash'\">\n                <img src=\"./assets/imgs/cash.png\" width=\"40\" slot=\"start\" />\n                <ion-label>\n                  <p>{{ 'CASH' | translate }}</p>\n                </ion-label>\n              </ion-item>\n\n              <ion-item *ngIf=\"order?.card\">\n                <img src=\"./assets/imgs/{{formatBrand()}}.png\" width=\"40\" slot=\"start\" />\n                <ion-label>\n                  <p *ngIf=\"order?.card\">\n                    &#8226;&#8226;&#8226;&#8226; {{ order?.card.last4 }}\n                  </p>\n                </ion-label>\n              </ion-item>\n\n            </ion-list>\n\n            <ion-list-header class=\"ion-margin-vertical\">\n              <h5>{{ 'MORE_INFO' | translate }}</h5>\n            </ion-list-header>\n\n            <ion-list class=\"ion-no-padding\">\n\n              <ion-item class=\"radius\">\n                <ion-label>\n                  <p>{{ 'STATUS' | translate }}</p>\n                </ion-label>\n\n                <div class=\"text-medium\" slot=\"end\">\n                  <span *ngIf=\"order?.status === 'Unpaid'\">{{ 'UNPAID' | translate }}</span>\n                  <span *ngIf=\"order?.status === 'Paid'\">{{ 'PAID' | translate }}</span>\n                  <span *ngIf=\"order?.status === 'Pending'\">{{ 'PENDING' | translate }}</span>\n                  <span *ngIf=\"order?.status === 'In Process'\">{{ 'IN_PROCESS' | translate }}</span>\n                  <span *ngIf=\"order?.status === 'Packed'\">{{ 'PACKED' | translate }}</span>\n                  <span *ngIf=\"order?.status === 'Shipped Out'\">{{ 'SHIPPED_OUT' | translate }}</span>\n                  <span *ngIf=\"order?.status === 'Delivered'\">{{ 'DELIVERED' | translate }}</span>\n                  <span *ngIf=\"order?.status === 'Cancelled'\">{{ 'CANCELLED' | translate }}</span>\n                </div>\n              </ion-item>\n\n              <ion-item *ngIf=\"order?.status === 'Cancelled' && order?.cancellationReason\">\n                <ion-label>\n                  <p>{{ 'REASON' | translate }}: {{ order.cancellationReason }}</p>\n                </ion-label>\n              </ion-item>\n\n              <ion-item>\n                <ion-label>\n                  <p>{{ 'ORDER_DATE' | translate }}</p>\n                </ion-label>\n\n                <div slot=\"end\">\n                  <p class=\"text-medium\">{{ order?.createdAt | dateGlobal: 'mediumDate' }}</p>\n                </div>\n              </ion-item>\n\n            </ion-list>\n\n          </ion-list>\n\n        </div>\n      </ion-col>\n    </ion-row>\n\n    <div *ngIf=\"isLoadingViewVisible\">\n      <ion-row class=\"ion-margin-vertical ion-justify-content-center\">\n        <ion-col size-xs=\"12\" size-lg=\"10\">\n          <div class=\"bg-light ion-padding\">\n            <ngx-skeleton-loader count=\"5\" [theme]=\"{ 'border-radius': '0', height: '50px', 'margin-bottom': '0' }\">\n            </ngx-skeleton-loader>\n          </div>\n        </ion-col>\n      </ion-row>\n\n      <ion-row class=\"ion-margin-vertical ion-justify-content-center\">\n        <ion-col size-xs=\"12\" size-lg=\"10\">\n          <div class=\"bg-light ion-padding\">\n            <ngx-skeleton-loader count=\"1\" [theme]=\"{ 'border-radius': '0', height: '50px', 'margin-bottom': '0' }\">\n            </ngx-skeleton-loader>\n          </div>\n        </ion-col>\n      </ion-row>\n\n      <ion-row class=\"ion-margin-vertical ion-justify-content-center\">\n        <ion-col size-xs=\"12\" size-lg=\"10\">\n          <div class=\"bg-light ion-padding\">\n            <ngx-skeleton-loader count=\"1\" [theme]=\"{ 'border-radius': '0', height: '50px', 'margin-bottom': '0' }\">\n            </ngx-skeleton-loader>\n          </div>\n        </ion-col>\n      </ion-row>\n    </div>\n\n  </ion-grid>\n</ion-content>","import { Component, Injector, ViewChild } from '@angular/core';\nimport { BasePage } from '../base-page/base-page';\nimport { Order } from '../../services/order';\nimport { ReviewAddPage } from '../review-add/review-add';\nimport { Observable, Subject, merge } from 'rxjs';\nimport { IonContent } from '@ionic/angular';\n\n@Component({\n  selector: 'page-order-detail-page',\n  templateUrl: 'order-detail-page.html',\n  styleUrls: ['order-detail-page.scss']\n})\nexport class OrderDetailPage extends BasePage {\n\n  public order: Order;\n\n  constructor(injector: Injector, private orderService: Order) {\n    super(injector);\n  }\n\n  ngOnInit() {}\n\n  async ionViewDidEnter() {\n\n    try {\n\n      await this.showLoadingView({ showOverlay: false });\n  \n      const orderId = await this.getParams().id;\n      this.order = await this.orderService.loadOne(orderId);\n\n      this.showContentView();\n      \n    } catch (error) {\n      this.showErrorView();\n    }\n\n  }\n\n  enableMenuSwipe(): boolean {\n    return false;\n  }\n\n  async onPresentReviewAddModal(item: any) {\n\n    await this.showLoadingView({ showOverlay: true });\n\n    const order = this.order;\n\n    const modal = await this.modalCtrl.create({\n      component: ReviewAddPage,\n      componentProps: { item, order }\n    });\n\n    await modal.present();\n\n    this.showContentView();\n  }\n\n  formatBrand() {\n\n    if (this.order && this.order.card) {\n      return this.order.card.brand.toLowerCase().replace(' ', '_')\n    }\n\n    return '';\n    \n  }\n\n  async onMarkAsReceived() {\n    try {\n\n      let str = await this.getTrans('CONFIRM_MARK_AS_RECEIVED');\n      \n      const res = await this.showConfirm(str);\n\n      if (!res) return;\n\n      await this.showLoadingView({ showOverlay: true });\n\n      await this.order.markAsDelivered();\n\n      this.showContentView();\n      \n    } catch (error) {\n      this.showContentView();\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { ReviewAddPage } from './review-add';\nimport { SharedModule } from '../../shared.module';\nimport { FormsModule } from '@angular/forms';\n \n@NgModule({\n  declarations: [\n    ReviewAddPage,\n  ],\n  imports: [\n    SharedModule,\n    FormsModule,\n  ],\n  entryComponents: [\n    ReviewAddPage\n  ]\n})\nexport class ReviewAddPageModule {}\n","<ion-header class=\"ion-no-border\">\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"end\">\n      <ion-button fill=\"clear\" (click)=\"onDismiss()\">\n        <ion-icon name=\"close\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n    <ion-title>\n      {{ 'ADD_REVIEW' | translate }}\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"ion-padding\">\n  <div class=\"ion-text-center\">\n    <bar-rating [(rate)]=\"input.rating\" [readOnly]=\"false\" [max]=\"5\" [theme]=\"'stars'\">\n    </bar-rating>\n    <ion-item class=\"ion-margin-vertical\" lines=\"none\" class=\"radius\" color=\"light\">\n      <ion-textarea [(ngModel)]=\"input.comment\" rows=\"8\" [placeholder]=\"'COMMENT' | translate\"\n        (keyup.enter)=\"onSubmit()\"></ion-textarea>\n    </ion-item>\n    <ion-button class=\"ion-margin-vertical\" shape=\"round\" color=\"primary\" strong\n      [disabled]=\"isLoadingViewVisible\"\n      (click)=\"onSubmit()\">\n      <ion-spinner *ngIf=\"isLoadingViewVisible\"></ion-spinner>\n      <span *ngIf=\"!isLoadingViewVisible\">{{ 'SUBMIT' | translate }}</span>\n    </ion-button>\n  </div>\n</ion-content>","\nimport { Component, Injector, Input } from '@angular/core';\nimport { BasePage } from '../base-page/base-page';\nimport { Order } from 'src/app/services/order';\n\n@Component({\n  selector: 'page-review-add',\n  templateUrl: 'review-add.html',\n  styleUrls: ['review-add.scss']\n})\nexport class ReviewAddPage extends BasePage {\n\n  @Input() order: Order;\n  @Input() item: any;\n\n  public input: any = {\n    rating: 3,\n    comment: ''\n  };\n\n  constructor(injector: Injector) {\n    super(injector);\n  }\n\n  enableMenuSwipe() {\n    return false;\n  }\n\n  prepareReviewData() {\n    return {\n      rating: this.input.rating,\n      comment: this.input.comment,\n      itemId: this.item.objectId\n    };\n  }\n\n  async onSubmit() {\n\n    if (!this.input.rating) {\n      const message = await this.getTrans('PLEASE_SELECT_A_RATING');\n      this.showToast(message);\n      return;\n    }\n\n    try {\n\n      await this.showLoadingView({ showOverlay: false });\n\n      const review = this.prepareReviewData();\n\n      await this.order.reviewItem(review);\n\n      this.translate.get('REVIEW_SUCCESS').subscribe(str => this.showToast(str));\n\n      this.showContentView();\n      this.onDismiss(review);\n\n    } catch (err) {\n\n      this.showContentView();\n\n      if (err.code === 5000) {\n        this.translate.get('REVIEW_ALREADY_EXISTS').subscribe(str => this.showToast(str));\n      } else {\n        this.translate.get('ERROR_NETWORK').subscribe(str => this.showToast(str));\n      }\n    }\n  }\n\n  onDismiss(review: any = null) {\n    this.modalCtrl.dismiss(review);\n  }\n\n}\n"]}